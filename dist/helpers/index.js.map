{"version":3,"sources":["../../src/helpers/firebase.ts","../../src/helpers/cars.ts","../../src/helpers/global.ts","../../src/helpers/forms.ts","../../src/helpers/store.ts","../../src/helpers/phoneNumber.ts"],"sourcesContent":["import moment from \"moment\";\r\nimport { initializeApp, FirebaseApp } from \"firebase/app\";\r\nimport { Auth, getAuth } from \"firebase/auth\";\r\nimport {\r\n    addDoc,\r\n    collection,\r\n    deleteDoc,\r\n    doc,\r\n    getDoc,\r\n    getDocs,\r\n    query,\r\n    setDoc,\r\n    Timestamp,\r\n    where,\r\n    DocumentData,\r\n    DocumentSnapshot,\r\n    CollectionReference,\r\n    WhereFilterOp,\r\n    Firestore,\r\n    getFirestore,\r\n    QueryDocumentSnapshot,\r\n} from \"firebase/firestore\";\r\nimport { formatCarNumber } from \"./cars\";\r\nimport { TObject } from \"akeyless-types-commons\";\r\n\r\nconst initApp = () => {\r\n    const isNodeEnv = typeof process !== \"undefined\" && process.env;\r\n    const firebaseConfig = {\r\n        apiKey: isNodeEnv ? process.env.NEXT_PUBLIC_API_KEY : import.meta.env.VITE_API_KEY,\r\n        authDomain: isNodeEnv ? process.env.NEXT_PUBLIC_AUTH_DOMAIN : import.meta.env.VITE_AUTH_DOMAIN,\r\n        projectId: isNodeEnv ? process.env.NEXT_PUBLIC_PROJECT_ID : import.meta.env.VITE_PROJECT_ID,\r\n        storageBucket: isNodeEnv ? process.env.NEXT_PUBLIC_STORAGE_BUCKET : import.meta.env.VITE_STORAGE_BUCKET,\r\n        messagingSenderId: isNodeEnv ? process.env.NEXT_PUBLIC_MESSAGING_SENDER_ID : import.meta.env.VITE_MESSAGING_SENDER_ID,\r\n        appId: isNodeEnv ? process.env.NEXT_PUBLIC_APP_ID : import.meta.env.VITE_APP_ID,\r\n    };\r\n    const app: FirebaseApp = initializeApp(firebaseConfig);\r\n    const auth: Auth = getAuth(app);\r\n    const db: Firestore = getFirestore(app);\r\n    return { db, auth };\r\n};\r\n\r\n// Initialize app\r\nexport const { db, auth } = initApp();\r\n\r\ninterface Collections {\r\n    [key: string]: CollectionReference<DocumentData>;\r\n    clients: CollectionReference<DocumentData>;\r\n    sites: CollectionReference<DocumentData>;\r\n    cars: CollectionReference<DocumentData>;\r\n    users: CollectionReference<DocumentData>;\r\n    lastLocations: CollectionReference<DocumentData>;\r\n    ermEvents: CollectionReference<DocumentData>;\r\n    erm2Events: CollectionReference<DocumentData>;\r\n    ruptelaEvents: CollectionReference<DocumentData>;\r\n    polygons: CollectionReference<DocumentData>;\r\n    polygonEvents: CollectionReference<DocumentData>;\r\n    polygonCars: CollectionReference<DocumentData>;\r\n    canbus: CollectionReference<DocumentData>;\r\n    states: CollectionReference<DocumentData>;\r\n    app_pro_commands_queue: CollectionReference<DocumentData>;\r\n    trips: CollectionReference<DocumentData>;\r\n    tripsDetails: CollectionReference<DocumentData>;\r\n    audit: CollectionReference<DocumentData>;\r\n    nx_settings: CollectionReference<DocumentData>;\r\n    settings: CollectionReference<DocumentData>;\r\n    translations: CollectionReference<DocumentData>;\r\n    nx_cars: CollectionReference<DocumentData>;\r\n    boards: CollectionReference<DocumentData>;\r\n    protection_types: CollectionReference<DocumentData>;\r\n    board_types: CollectionReference<DocumentData>;\r\n    charge_capacities: CollectionReference<DocumentData>;\r\n}\r\n\r\nexport const collections: Collections = {\r\n    clients: collection(db, \"nx-clients\"),\r\n    sites: collection(db, \"nx-sites\"),\r\n    cars: collection(db, \"units\"),\r\n    users: collection(db, \"nx-users\"),\r\n    lastLocations: collection(db, \"last_locations\"),\r\n    ermEvents: collection(db, \"erm_events_general\"),\r\n    erm2Events: collection(db, \"erm2_events_general\"),\r\n    ruptelaEvents: collection(db, \"ruptela_events_general\"),\r\n    polygons: collection(db, \"nx-polygons\"),\r\n    polygonEvents: collection(db, \"polygon_events\"),\r\n    polygonCars: collection(db, \"polygon_cars\"),\r\n    canbus: collection(db, \"erm_canbus_parameters\"),\r\n    states: collection(db, \"erm_states\"),\r\n    app_pro_commands_queue: collection(db, \"app_pro_commands_queue\"),\r\n    trips: collection(db, \"erm2_trip\"),\r\n    tripsDetails: collection(db, \"erm2_trip_details\"),\r\n    audit: collection(db, \"nx-audit\"),\r\n    nx_settings: collection(db, \"nx-settings\"),\r\n    settings: collection(db, \"settings\"),\r\n    translations: collection(db, \"nx-translations\"),\r\n    nx_cars: collection(db, \"nx-cars\"),\r\n    boards: collection(db, \"boards\"),\r\n    protection_types: collection(db, \"protectionTypes\"),\r\n    board_types: collection(db, \"boardTypes\"),\r\n    charge_capacities: collection(db, \"nx-charge-capacities\"),\r\n};\r\n\r\n// Timestamp\r\nexport const fire_base_TIME_TEMP = Timestamp.now;\r\n\r\n// Data extraction functions\r\nexport const extractAlertsData = (doc: DocumentSnapshot<DocumentData>) => {\r\n    const data = doc.data()!;\r\n    const { car_number, timestamp } = data;\r\n    return {\r\n        ...data,\r\n        timestamp_seconds: timestamp.seconds,\r\n        timestamp_ui: moment.unix(timestamp.seconds).format(\"DD/MM/YY HH:mm\"),\r\n        car_number: formatCarNumber(car_number),\r\n    };\r\n};\r\n\r\nexport const simpleExtractData = (doc: DocumentSnapshot<DocumentData> | QueryDocumentSnapshot<any, DocumentData>) => {\r\n    const docData = doc.data();\r\n    return {\r\n        ...docData,\r\n        id: doc.id,\r\n    };\r\n};\r\n\r\nexport const extractSiteData = (doc: DocumentSnapshot<DocumentData>) => {\r\n    const data = doc.data()!;\r\n    const dateUpdated = new Date(data.updated?.seconds * 1000 + data.updated.nanoseconds / 1000000);\r\n    const dateCreated = new Date(data.created?.seconds * 1000 + data.created.nanoseconds / 1000000);\r\n    return {\r\n        ...data,\r\n        id: doc.id,\r\n        created: moment(dateCreated).format(\"DD.MM.YYYY - HH:mm\"),\r\n        updated: moment(dateUpdated).format(\"DD.MM.YYYY - HH:mm\"),\r\n    };\r\n};\r\n\r\nexport const extractClientData = (doc: DocumentSnapshot<DocumentData>) => {\r\n    const data = doc.data()!;\r\n    const dateUpdated = new Date(data.updated?.seconds * 1000 + data.updated.nanoseconds / 1000000);\r\n    const dateCreated = new Date(data.created?.seconds * 1000 + data.created.nanoseconds / 1000000);\r\n    return {\r\n        ...data,\r\n        id: doc.id,\r\n        created: moment(dateCreated).format(\"HH:mm  DD/MM/YY\"),\r\n        updated: moment(dateUpdated).format(\"HH:mm  DD/MM/YY\"),\r\n    };\r\n};\r\n\r\nexport const extractBoardsData = (doc: DocumentSnapshot<DocumentData>) => {\r\n    const data = doc.data()!;\r\n    const dateUploaded = typeof data.uploaded === \"string\" ? data.uploaded : moment.unix(data.uploaded?.seconds).format(\"DD/MM/YY HH:mm\");\r\n    return {\r\n        ...data,\r\n        id: doc.id,\r\n        uploaded: dateUploaded,\r\n    };\r\n};\r\n\r\nexport const extractCarsData = (doc: DocumentSnapshot<DocumentData>) => {\r\n    const carData = doc.data()!;\r\n    let icon: string;\r\n    const gov_info = carData.gov_info;\r\n    if (gov_info) {\r\n        if (carData.icon) {\r\n            icon = carData.icon;\r\n        } else if (gov_info.vehicle_type === \"atv\") {\r\n            icon = \"truck\";\r\n        } else if (gov_info.vehicle_type === \"motorcycle\") {\r\n            icon = \"motorcycle\";\r\n        } else {\r\n            icon = \"car\";\r\n        }\r\n    } else {\r\n        icon = \"car\";\r\n    }\r\n    return {\r\n        ...carData,\r\n        id: doc.id,\r\n        brand: carData.brand || carData.manufacturer,\r\n        car_number: carData.carId,\r\n        icon,\r\n    };\r\n};\r\n\r\nexport const extractCanbusData = (doc: DocumentSnapshot<DocumentData>) => {\r\n    const data = doc.data()!;\r\n    const newDate = new Date(data.timestamp.seconds * 1000);\r\n    return {\r\n        ...data,\r\n        date_ui: moment(newDate).format(\"DD/MM/YYYY - HH:mm\"),\r\n    };\r\n};\r\n\r\nexport const extractLocationData = (doc: DocumentSnapshot<DocumentData>) => {\r\n    const locationData = doc.data()!;\r\n    const { latitude, longitude, spd, timestamp, prev_latitude, prev_longitude } = locationData;\r\n    return {\r\n        ...locationData,\r\n        id: doc.id,\r\n        lat: latitude,\r\n        lng: longitude,\r\n        prev_lat: prev_latitude,\r\n        prev_lng: prev_longitude,\r\n        timestamp: timestamp?.seconds,\r\n        spd: Number(spd).toFixed(0),\r\n    };\r\n};\r\n\r\n// Helper functions\r\nexport const get_all_documents = async (collection_path: string) => {\r\n    try {\r\n        const snapshot = await getDocs(collection(db, collection_path));\r\n        const documents = snapshot.docs.map((doc) => simpleExtractData(doc));\r\n        return documents;\r\n    } catch (error) {\r\n        return [];\r\n    }\r\n};\r\n\r\nexport const get_document_by_id = async (collection_path: string, doc_id: string) => {\r\n    try {\r\n        const doc_ref = doc(db, collection_path, doc_id);\r\n        const doc_snap = await getDoc(doc_ref);\r\n        if (!doc_snap.exists()) {\r\n            throw new Error(\"Document not found, document id: \" + doc_id);\r\n        }\r\n        return simpleExtractData(doc_snap);\r\n    } catch (error) {\r\n        console.error(\"Error from get_document_by_id\", error);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const set_document = async (collection_path: string, doc_id: string, data: DocumentData) => {\r\n    try {\r\n        const doc_ref = doc(db, collection_path, doc_id);\r\n        await setDoc(doc_ref, data, { merge: true });\r\n        return true;\r\n    } catch (error) {\r\n        console.error(`Failed to create document by id: ${doc_id} in collection: ${collection_path}`, { error, data });\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const add_document = async (collection_path: string, data: DocumentData, include_id = false) => {\r\n    try {\r\n        const col_ref = collection(db, collection_path);\r\n        const doc_ref = await addDoc(col_ref, data);\r\n        if (include_id) {\r\n            await setDoc(doc_ref, { ...data, id: doc_ref.id }, { merge: true });\r\n        }\r\n        return true;\r\n    } catch (error) {\r\n        console.error(`Failed to create document in collection: ${collection_path}`, error);\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const delete_document = async (collection_path: string, doc_id: string) => {\r\n    try {\r\n        const doc_ref = doc(db, collection_path, doc_id);\r\n        await deleteDoc(doc_ref);\r\n        return true;\r\n    } catch (error) {\r\n        console.error(`Failed to delete document with id ${doc_id} from collection ${collection_path}`, error);\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const query_document = async (\r\n    collection_path: string,\r\n    field_name: string,\r\n    operator: WhereFilterOp,\r\n    value: any,\r\n    ignore_log = false\r\n): Promise<null | TObject<any>> => {\r\n    try {\r\n        const q = query(collection(db, collection_path), where(field_name, operator, value));\r\n        const query_snapshot = await getDocs(q);\r\n        const documents = query_snapshot.docs.map((doc) => simpleExtractData(doc));\r\n        if (documents.length < 1) {\r\n            throw new Error(\r\n                `No data to return from: \\ncollection: ${collection_path}, \\nfield_name: ${field_name}, \\noperator: ${operator}, \\nvalue: ${value}`\r\n            );\r\n        }\r\n        return documents[0];\r\n    } catch (error) {\r\n        if (!ignore_log) {\r\n            console.error(\"Error querying document:\", error);\r\n        }\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const query_documents = async (collection_path: string, field_name: string, operator: WhereFilterOp, value: any) => {\r\n    try {\r\n        const q = query(collection(db, collection_path), where(field_name, operator, value));\r\n        const query_snapshot = await getDocs(q);\r\n        const documents = query_snapshot.docs.map((doc) => simpleExtractData(doc));\r\n        return documents;\r\n    } catch (error) {\r\n        console.error(`Error querying documents: ${collection_path} - ${field_name} - ${operator} - ${value} `, error);\r\n        return [];\r\n    }\r\n};\r\n\r\ninterface WhereCondition {\r\n    field_name: string;\r\n    operator: WhereFilterOp;\r\n    value: any;\r\n}\r\n\r\nexport const query_documents_by_conditions = async (collection_path: string, where_conditions: WhereCondition[]) => {\r\n    try {\r\n        let db_query: any = collection(db, collection_path);\r\n        where_conditions.forEach((condition) => {\r\n            db_query = query(db_query, where(condition.field_name, condition.operator, condition.value));\r\n        });\r\n        const query_snapshot = await getDocs(db_query);\r\n        const documents = query_snapshot.docs.map((doc) => simpleExtractData(doc));\r\n        return documents;\r\n    } catch (error) {\r\n        console.error(`Error querying documents: ${collection_path} - ${JSON.stringify(where_conditions)} `, error);\r\n        return [];\r\n    }\r\n};\r\n\r\nexport const query_document_by_conditions = async (collection_path: string, where_conditions: WhereCondition[]) => {\r\n    try {\r\n        let db_query: any = collection(db, collection_path);\r\n        where_conditions.forEach((condition) => {\r\n            db_query = query(db_query, where(condition.field_name, condition.operator, condition.value));\r\n        });\r\n        const query_snapshot = await getDocs(db_query);\r\n        const documents = query_snapshot.docs.map((doc) => simpleExtractData(doc));\r\n        if (!documents[0]) {\r\n            throw new Error(\"No data returned from DB\");\r\n        }\r\n        return documents[0];\r\n    } catch (error) {\r\n        console.error(`Error querying documents: ${collection_path} - ${JSON.stringify(where_conditions)} `, error);\r\n        return null;\r\n    }\r\n};\r\n","\r\n\r\nexport const formatCarNumber = (car_number: string) => {\r\n    var cn = car_number;\r\n    if (cn?.length == 8) return `${cn[0]}${cn[1]}${cn[2]}-${cn[3]}${cn[4]}-${cn[5]}${cn[6]}${cn[7]}`;\r\n    if (cn?.length == 7) return `${cn[0]}${cn[1]}-${cn[2]}${cn[3]}${cn[4]}-${cn[5]}${cn[6]}`;\r\n    if (cn?.length == 6) return `${cn[0]}${cn[1]}-${cn[2]}${cn[3]}-${cn[4]}${cn[5]}`;\r\n    if (cn?.length == 5) return `${cn[0]}-${cn[1]}${cn[2]}-${cn[3]}${cn[4]}`;\r\n    return cn;\r\n};\r\n","export const calculateBearing = (startLat: number, startLng: number, endLat: number, endLng: number) => {\r\n    if (startLat === endLat || startLng === endLng) {\r\n        return 0;\r\n    }\r\n    if (startLat === undefined || startLng === undefined || endLat === undefined || endLng === undefined) {\r\n        return 0;\r\n    }\r\n    const startLatRad = (startLat * Math.PI) / 180;\r\n    const startLngRad = (startLng * Math.PI) / 180;\r\n    const endLatRad = (endLat * Math.PI) / 180;\r\n    const endLngRad = (endLng * Math.PI) / 180;\r\n\r\n    const dLon = endLngRad - startLngRad;\r\n    const y = Math.sin(dLon) * Math.cos(endLatRad);\r\n    const x = Math.cos(startLatRad) * Math.sin(endLatRad) - Math.sin(startLatRad) * Math.cos(endLatRad) * Math.cos(dLon);\r\n    const bearing = (Math.atan2(y, x) * 180) / Math.PI;\r\n\r\n    return (bearing + 360) % 360;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const handleInvalid = (e: React.InvalidEvent<HTMLInputElement>, requireError?: string) => {\r\n    e.target.setCustomValidity(requireError || \"This filed is required !\");\r\n};\r\n\r\nexport const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.target.setCustomValidity(\"\");\r\n    const validation = e.target.getAttribute(\"data-validation\");\r\n    if (validation === \"text\") {\r\n        const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת\\- ]/g, \"\");\r\n        e.target.value = cleanedValue;\r\n    } else if (validation === \"numbers\") {\r\n        const cleanedValue = e.target.value.replace(/[^0-9\\- +]/g, \"\");\r\n        e.target.value = cleanedValue;\r\n    } else if (validation === \"numbersOnly\") {\r\n        const cleanedValue = e.target.value.replace(/[^0-9]/g, \"\");\r\n        e.target.value = cleanedValue;\r\n    } else if (validation === \"price\") {\r\n        const cleanedValue = e.target.value.replace(/[^0-9\\.]/g, \"\");\r\n        e.target.value = cleanedValue;\r\n    } else if (validation === \"textNumbers\") {\r\n        const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת0-9\\- +]/g, \"\");\r\n        e.target.value = cleanedValue;\r\n    } else if (validation === \"email\") {\r\n        const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת0-9.@\\- ]/g, \"\");\r\n        e.target.value = cleanedValue;\r\n    } else if (validation === \"color\") {\r\n        const cleanedValue = e.target.value.replace(/[^#0-9A-Fa-f]/g, \"\");\r\n        e.target.value = cleanedValue;\r\n    } else if (validation === \"address\") {\r\n        const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת0-9\\-., ]/g, \"\");\r\n        e.target.value = cleanedValue;\r\n    } else if (validation === \"cars\") {\r\n        const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת0-9,_]/g, \"\");\r\n        e.target.value = cleanedValue;\r\n    } else if (validation === \"charts\") {\r\n        const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת0-9\\-.,_@! ]/g, \"\");\r\n        e.target.value = cleanedValue;\r\n    } else {\r\n        e.target.value = e.target.value;\r\n    }\r\n};\r\n\r\nexport const handlePaste = (e: React.ClipboardEvent<HTMLInputElement>) => {\r\n    const validation = e.currentTarget.getAttribute(\"data-validation\");\r\n    let pasteData = e.clipboardData.getData(\"text\");\r\n\r\n    if (validation === \"text\") {\r\n        pasteData = pasteData.replace(/[^a-zA-Zא-ת\\- ]/g, \"\");\r\n    } else if (validation === \"numbers\") {\r\n        pasteData = pasteData.replace(/[^0-9\\- +]/g, \"\");\r\n    } else if (validation === \"numbersOnly\") {\r\n        pasteData = pasteData.replace(/[^0-9]/g, \"\");\r\n    } else if (validation === \"price\") {\r\n        pasteData = pasteData.replace(/[^0-9\\.]/g, \"\");\r\n    } else if (validation === \"textNumbers\") {\r\n        pasteData = pasteData.replace(/[^a-zA-Zא-ת0-9\\- +]/g, \"\");\r\n    } else if (validation === \"email\") {\r\n        pasteData = pasteData.replace(/[^a-zA-Zא-ת0-9.@\\- ]/g, \"\");\r\n    } else if (validation === \"color\") {\r\n        pasteData = pasteData.replace(/[^#0-9A-Fa-f]/g, \"\");\r\n    } else if (validation === \"address\") {\r\n        pasteData = pasteData.replace(/[^a-zA-Zא-ת0-9\\-., ]/g, \"\");\r\n    } else if (validation === \"cars\") {\r\n        pasteData = pasteData.replace(/[^a-zA-Zא-ת0-9,_]/g, \"\");\r\n    } else if (validation === \"charts\") {\r\n        pasteData = pasteData.replace(/[^a-zA-Zא-ת0-9\\-.,_@! ]/g, \"\");\r\n    }\r\n\r\n    e.preventDefault();\r\n    document.execCommand(\"insertText\", false, pasteData);\r\n};\r\n\r\nexport const useValidation = (validationType: string, requireError?: string) => {\r\n    return {\r\n        onChange: handleChange,\r\n        onPaste: handlePaste,\r\n        onInvalid: (e: React.InvalidEvent<HTMLInputElement>) => handleInvalid(e, requireError),\r\n        \"data-validation\": validationType,\r\n    };\r\n};\r\n","export const setState = <T>(updater: T | ((state: T) => T), set: (fn: (state: any) => any) => void, stateName: string) => {\r\n    return set((state: any) => ({\r\n        [stateName]: typeof updater === \"function\" ? (updater as (state: T) => T)(state[stateName]) : updater,\r\n    }));\r\n};\r\n\r\nexport const createSelectors = <T extends object>(store: any) => {\r\n    let selectors: { [K in keyof T]: () => T[K] } = {} as any;\r\n    for (let k of Object.keys(store.getState()) as Array<keyof T>) {\r\n        selectors[k] = () => store((s: T) => s[k]);\r\n    }\r\n    return selectors;\r\n};\r\n\r\nexport const useStoreValues = <T extends object>(store: { use: { [K in keyof T]: () => T[K] } }, keys: Array<keyof T>): Partial<T> => {\r\n    const result: Partial<T> = {};\r\n    keys.forEach((key) => {\r\n        result[key] = store.use[key]();\r\n    });\r\n    return result;\r\n};\r\n\r\n// Example usage\r\n// const STATE_NAME = STORE_NAME.use.STATE_NAME();\r\n// const keysArray = [\"STATES_NAME_1\", \"STATES_NAME_2\"];\r\n// const { STATES_NAME_1, STATES_NAME_2 } = useStoreValues(STORE_NAME, keysArray);\r\n","import { parsePhoneNumberFromString } from \"libphonenumber-js\";\r\n\r\ntype ConvertFunction = (input: string) => string;\r\ntype CheckFunction = (input: string) => boolean;\r\nexport const isInternational: CheckFunction = (phone_number) => {\r\n    return phone_number.startsWith(\"+\");\r\n};\r\nexport const isInternationalIsraelPhone: CheckFunction = (phone_number: string) => {\r\n    return phone_number.startsWith(\"+9725\");\r\n};\r\nexport const local_israel_phone_format: ConvertFunction = (international_number) => {\r\n    return international_number.replace(\"+972\", \"0\");\r\n};\r\nexport const international_israel_phone_format:ConvertFunction = (phone) => {\r\n    const validNumber = phone.slice(1, phone.length);\r\n    return \"+972\".concat(validNumber);\r\n};\r\nexport const displayFormatPhoneNumber:ConvertFunction = (phoneNumber) => {\r\n    if (isInternational(phoneNumber)) {\r\n        const phoneNumberObject = parsePhoneNumberFromString(phoneNumber);\r\n        if (!phoneNumberObject) {\r\n            return phoneNumber;\r\n        }\r\n        return phoneNumberObject.formatInternational().replace(/\\s/g, \"-\");\r\n    }\r\n    return phoneNumber.replace(/(\\d{3})(\\d{3})(\\d{4})/, \"$1-$2-$3\");\r\n};\r\n"],"mappings":"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","names":["auth","db","doc"]}